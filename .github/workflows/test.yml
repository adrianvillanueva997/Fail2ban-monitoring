name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-postgres:
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      - name: Install uv
        uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04 # v6.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Run Postgres tests
        run: |
          uv sync --extra postgres
          uv run pytest tests/test_end_to_end_postgres.py -sv
  # test-mariadb:
  #   runs-on: ubuntu-24.04
  #   env:
  #     MYSQL_HOST: 127.0.0.1
  #     MYSQL_PORT: 3306
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: test
  #   services:
  #     mysql:
  #       image: mariadb:10.6
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #         MYSQL_DATABASE: test
  #       ports:
  #         - 3306:3306
  #       options: >-
  #         --health-cmd="mysqladmin ping --host=127.0.0.1 --password=root"
  #         --health-interval=10s
  #         --health-timeout=5s
  #         --health-retries=5
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Set up Python
  #       uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
  #     - name: Install uv
  #       uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04 # v6.0.0
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
  #     - name: Create test user
  #       run: |
  #         mysql -u root -proot -e "
  #           CREATE USER IF NOT EXISTS 'testuser'@'%' IDENTIFIED BY 'test';
  #           GRANT ALL PRIVILEGES ON test.* TO 'testuser'@'%';
  #           FLUSH PRIVILEGES;"      - name: Run MySQL tests
  #         run: |
  #           uv sync --extra mysql
  #           uv run pytest tests/test_end_to_end_mysql.py -sv

  test-sqlite:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      - name: Install uv
        uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04 # v6.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Run SQLite tests
        run: |
          uv sync --extra sqlite
          uv run pytest tests/test_end_to_end_sqlite.py -s

  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      - name: Install uv
        uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04 # v6.0.0
      - name: Install dependencies
        run: uv sync
      - name: Ruff
        if: always()
        run: uv run ruff check src --output-format=github
      - name: Mypy
        if: always()
        run: uv run mypy src
      - name: Bandit
        if: always()
        run: uv run bandit src


