name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - db: postgres
            service_name: postgres
            image: postgres:16
            env:
              POSTGRES_USER: test
              POSTGRES_PASSWORD: test
              POSTGRES_DB: test
            port: 5432
            health_cmd: pg_isready
            uv: postgres

          - db: mysql
            service_name: mysql
            image: mysql:8.3
            env:
              MYSQL_ROOT_PASSWORD: test
              MYSQL_DATABASE: test
              MYSQL_USER: test
              MYSQL_PASSWORD: test
            port: 3306
            health_cmd: "mysqladmin ping --silent"
            uv: mysql

    services:
      db:
        image: ${{ matrix.image }}
        env: ${{ toJson(matrix.env) }}
        ports:
          - ${{ matrix.port }}:${{ matrix.port }}
        options: >-
          --health-cmd "${{ matrix.health_cmd }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      - name: Install uv
        uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04 # v6.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Run tests
        run: |
          uv sync --extra ${{matrix.uv}}
